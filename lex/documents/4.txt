var
  tot : numerico
  n : numerico
inicio
  cls()
  imprimir_explicacion()
  imprimir ("Numero entero? ")
  leer (n)
  calcular_suma (n)
  imprimir ("\nLa suma de los primeros ", n, "numeros enteros es ", tot)
fin

/* continuacion del programa ejemplo_llamada_subrutinas */
subrutina imprimir_explicacion()
inicio
  imprimir ("\nEste programa de ejemplo calcula la suma de los enteros",
            "\npositivos comprendidos entre 1 y un valor ",
            "que se ingresa\n")
fin

subrutina calcular_suma (entero_tope : numerico)
/*
  Ejemplo de subrutina que recibe un parametro.
*/
var
  k : numerico
  inicio
  tot = 0
  desde k = 1 hasta entero_tope
  {
    tot = tot + k
  }
fin

subrutina entero (n : numerico) retorna numerico
var
  ent : numerico
inicio
  ent = 0
  mientras ( n >= 1 )
  {
    ent = ent + 1
    n = n - 1
  }
  retorna ( ent )
fin

subrutina mi_sub (a : numerico; ref b : numerico)
/*
  a se recibe por valor, pero b por referencia.
*/
inicio
  a = 5
  b = b * 5
  imprimir ( "\n", a, " ", b)
fin

subrutina impr_vect (v : vector [*] numerico)
var
  k : numerico
inicio
  desde k=1 hasta alen (v)
  {
    imprimir (v [k], "")
  }
fin